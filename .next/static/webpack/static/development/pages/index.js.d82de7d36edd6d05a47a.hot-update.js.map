{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d82de7d36edd6d05a47a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../component/layout';\r\nimport Link from 'next/link';\r\n// const PostLink = props => (\r\n//     <li>\r\n//       <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n//         <a>{props.id}</a>\r\n//       </Link>\r\n//     </li>\r\n//   );\r\n  \r\n//   export default function Blog() {\r\n//     return (\r\n//       <Layout>\r\n//         <h1>My Blog</h1>\r\n//         <ul>\r\n//           <PostLink id=\"hello-nextjs\" />\r\n//           <PostLink id=\"learn-nextjs\" />\r\n//           <PostLink id=\"deploy-nextjs\" />\r\n//         </ul>\r\n//       </Layout>\r\n//     );\r\n//   }\r\n\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst PostLink = ({ post }) => (\r\n    <li>\r\n      <Link href=\"/p/[id]\" as={`/p/${post.id}`}>\r\n        <a>{post.title}</a>\r\n      </Link>\r\n    </li>\r\n  );\r\n  \r\nconst Index = props => (\r\n  <Layout>\r\n    <h1>Batman TV Shows</h1>\r\n    <ul>\r\n      {props.shows.map(show => (\r\n        \r\n             <PostLink key={show.id} post={show} />\r\n      ))}\r\n    </ul>\r\n    <style jsx>{`\r\n        h1,\r\n        a {\r\n          font-family: 'Arial';\r\n        }\r\n\r\n        ul {\r\n          padding: 0;\r\n        }\r\n\r\n        li {\r\n          list-style: none;\r\n          margin: 5px 0;\r\n        }\r\n\r\n        a {\r\n          text-decoration: none;\r\n          color: blue;\r\n        }\r\n\r\n        a:hover {\r\n          opacity: 0.6;\r\n        }\r\n      `}</style>\r\n  </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAHA;AAAA;AAAA;AADA;AACA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAEA;AAJA;AAOA;AAAA;AAAA;AADA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}